#!/usr/bin/env python

'GETPATHS -- return comma-separated list of specified paths'
__author__ = 'philippe.landry@ligo.org'

#-------------------------------------------------

import numpy as np
import os
import glob

from argparse import ArgumentParser

#-------------------------------------------------

DEFAULT_SUBDIRNAMES = ('DRAWmod1', 'MACROdraw')
DEFAULT_MODS = (1, 1)

#-------------------------------------------------

parser = ArgumentParser(description=__doc__)

parser.add_argument('basename', type=str)
parser.add_argument('reffile', type=str)

parser.add_argument('-d', '--dir', default='./', type=str,
    help='input directory path')
parser.add_argument('-o', '--outdir', default='./', type=str,
    help='output directory path')
parser.add_argument('-s', '--subdirnames', nargs='+', type=str, default=DEFAULT_SUBDIRNAMES,
    help='subdirectory basenames')

parser.add_argument('-m', '--mod', default=DEFAULT_MODS, type=int,
    help='moduli for subdirectory numbering')
parser.add_argument('-n', '--num', default=1e5, type=float,
    help='number of files at which to truncate')

parser.add_argument('-t', '--tag', default='', type=str,
    help='tag for basenames')

args = parser.parse_args()

#------------------------

basename = args.basename
reffile = args.reffile

indir = args.dir
outdir = args.outdir

subdirs = args.subdirnames
mods = args.mod
mods = [int(mod) for mod in mods]

num = args.num
tag = args.tag)

refpath = indir+reffile
refdat = np.genfromtxt(refpath, names=True, delimiter=',', dtype=int)
eosnums = refdat['EoS']

eosnums = list(set(eosnums))
if len(eosnums) > num:
    eosnums = eosnums[:num]

#-------------------------------------------------

paths = []
for eosnum in eosnums:

    i = 0
    subpaths = []
    for sub in subdirs:
	
        subpaths.append(sub+'-'+str(eosnum/mods[i]).zfill(6))
        i = i+1

    if subdirs[0] == 'None':
        subpath = ''
    else:
        subpath = '/'.join(subpaths)

    paths.append(outdir+subpath+'/'+basename+'-'+str(eosnum).zfill(6)+tag+'.csv')
	
print(','.join(paths))
