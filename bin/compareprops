#!/usr/bin/env python

'COMPAREPROPS -- produce diagnostic plot of differences in M-R, M-Lambda, ... relations between EoS1, EoS2, ...'
__author__ = 'philippe.landry@ligo.org and Reed Essick (reed.essick@gmail.com)'

#-------------------------------------------------

import os
import numpy as np
from scipy.interpolate import interp1d

from argparse import ArgumentParser

from nsstruc import tov
from nsstruc.pltsetup import *

#-------------------------------------------------

DEFAULT_M_RANGE = [0.5, 3.0]

#-------------------------------------------------

parser = OptionParser(description=__doc__)

parser.add_argument('paths', nargs='+', type=str)

parser.add_argument('-p', '--props', nargs='+', type=str, default=tov.DEFAULT_PROPS,
    help='list of NS properties to plot vs M, DEFAULT=rhoc,R,Lambda')

parser.add_argument('-l', '--lims', nargs=2, type=float, default=DEFAULT_M_RANGE,
    help='M range for plot x-axis')

parser.add_argument('-x', action='store_false', default=True,
    help='make separate figures instead of subplots with shared x-axis')

parser.add_argument('-d', '--dir', default='./dat/', type=str,
    help='path to directory housing NS properties data')
parser.add_argument('-o', '--outdir', default='./plt/', type=str,
    help='path to directory for plot output')
parser.add_argument('-t', '--tag', default=True,
    help='tag to append to output filename')
parser.add_argument('-f', '--pltname', default='compareplot', type=str,
    help='plot output filename (automatically appends .png)')

args = parser.parse_args()

#------------------------

eosnames = args.paths
shortnames = [os.path.basename(eosname).split('.')[0] for eosname in eosnames]

props = args.props
numprops = len(props)

lims = args.lims

sharex = args.sharex

indir = args.dir
outdir = args.outdir
tag = args.tag
if tag:
    tag='_'.join(shortnames)
pltname = args.pltname

#-------------------------------------------------

fig = plt.figure(1)
fig.subplots_adjust(hspace=0., wspace=0.)
plt.suptitle('Fractional errors relative to '+shortnames[0], y=0.95)

# LOAD NS PROPERTIES FOR REFERENCE EOS (FIRST GIVEN)

eosname = eosnames[0]
propspath = indir+eosname
refdat = np.genfromtxt(propspath, names=True, delimiter=',')

# LOAD NS PROPERTIES FOR EACH REMAINING EOS

for eosname in eosnames[1:]:

    shortname = (eosname.split('/')[-1]).split('.')[0]

    propspath = indir+eosname
    propsdat = np.genfromtxt(propspath, names=True, delimiter=',')
	
    for prop in props:
	
# CALCULATE FRACTIONAL DIFFERENCE RELATIVE TO REFERENCE EOS'S NS PROPERTIES

        reffunc=interp1d(refdat['M'],refdat[prop],kind='linear',bounds_error=False, fill_value=0) # interpolate M-R, etc. functions for given EoS and ref EoS
		
        Mmin = max(min(propsdat['M']),min(refdat['M']))
        Mmax = min(max(propsdat['M']),max(refdat['M'])) # use range of data common to both EoSs only
		
        Mdat = propsdat['M']
        fracdiffdat = abs(propsdat[prop]-reffunc(Mdat))/reffunc(Mdat) # fractional difference in properties as a function of mass

# PLOT FRACTIONAL DIFFERENCES VS MASS FOR EACH EOS
	
        subpltnum = props.index(prop)+1
        if sharex:
            subplt = plt.subplot(numprops,1,subpltnum)	# make subplots
        else:							# or separate figs
            plt.figure(subpltnum)
            subplt = plt.subplot(1,1,1)
		
        subplt.set_xlabel(r'$M$ $[M_{\odot}]$')
        subplt.set_xlim(lims[0],lims[1])
        subplt.set_ylabel(propslabels[prop])
        subplt.set_xticks([],[])
		
        subplt.plot(Mdat,fracdiffdat,lw=2,label=shortname,marker='.')
		
        if not sharex: 
            subplt.xaxis.set_major_locator(AutoLocator())
            plt.legend(loc=0)
            plt.suptitle('Fractional errors relative to '+shortnames[0], y=0.95)		
            plt.savefig(outdir+pltname+tag+'-'+prop+'.png')

if sharex:
    subplt.xaxis.set_major_locator(AutoLocator())
    plt.legend(loc=0)		
    plt.savefig(outdir+pltname+tag+'.png')
